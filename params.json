{"name":"Sendgrid Template Transfer","tagline":"Ruby script to transfer Sendgrid templates from one account to another, using the Sendgrid Template API.","body":"# Sendgrid Template Transfer Ruby Script\r\n----------------------------------------\r\n\r\nCurrently, there is not an easy option for transferring templates within Sendgrid from one account to another; say, from a development account to a production. While trying to execute this for my current job, I could not find a solution that was already created for this very purpose.\r\n\r\nHowever, Sendgrid does provide a [Template API](https://sendgrid.com/docs/API_Reference/Web_API_v3/Template_Engine/templates.html) for this very purpose. This particular solution is for Ruby, but I'm sure other languages can be supported as well. I plan to create a Python solution script for this as well in my free time, so look out for this in the future!\r\n\r\nI wrote this to save others the pain of doing this from scratch; I do hope that you find this useful! Below I outline the transfer flow, with included sidenotes of discoveries I made along the way. Enjoy!\r\n\r\n\r\n## Configuration\r\nPlease refer to the [script](https://github.com/astrocaribe/template_transfer) repo on specifics for configuration.\r\n\r\n\r\n## Script Flow\r\nThis script was born out of the lack of resources on how to transfer templates between accounts, using the supplied Sendgrid [Template API](https://sendgrid.com/docs/API_Reference/Web_API_v3/Template_Engine/templates.html) and corresponding [Template Versions](https://sendgrid.com/docs/API_Reference/Web_API_v3/Template_Engine/versions.html) documentation for transferring multiple versions of a template.\r\n\r\n**Note:** *This solution was coded in Ruby 2.1.2; to code in another language, use this flow as a guide, and code against appropriate analogs.*\r\n\r\n**Important Caveat:** *Currently, this script **does not** selectively copy templates. This script will copy **ALL** of the templates from the first account.*\r\n\r\nWith that out of the way, here's the current flow, all examples within are drawn from the [Template API](https://sendgrid.com/docs/API_Reference/Web_API_v3/Template_Engine/templates.html) docs:\r\n\r\n### Step 1. Retrieve all available templates from Account1\r\nIn this step, all templates are copied from the first account (the *transfer from* account). This operation *does not* copy the template content; only the identifying information is retrieved:\r\n\r\n\t{\r\n  \t  \"templates\": [\r\n        {\r\n      \t  \"id\": \"e8ac01d5-a07a-4a71-b14c-4721136fe6aa\",\r\n      \t  \"name\": \"example template name\",\r\n      \t  \"versions\": [\r\n            {\r\n          \t  \"id\": \"5997fcf6-2b9f-484d-acd5-7e9a99f0dc1f\",\r\n          \t  \"template_id\": \"9c59c1fb-931a-40fc-a658-50f871f3e41c\",\r\n          \t  \"active\": 1,\r\n          \t  \"name\": \"example version name\",\r\n          \t  \"updated_at\": \"2014-03-19 18:56:33\"\r\n        \t}]\r\n    \t }]\r\n\t}\r\n\t\r\nTemplate versions are also retrieved, but still no template content.\r\n\r\nAs such, the approach here is to retrieve all the templates, and store the main :id and :name of each in an array in memory. A sample Curl example to the API looks like this:\r\n\r\n\tcurl -X GET https://username:password@api.sendgrid.com/v3/templates/\r\n\t\r\n### Step 2. Recursively retrieve each template from Account1\r\nUsing the stored array in memory, each template is then retrieved using :id;\r\n\r\n\tcurl -X GET https://username:password@api.sendgrid.com/v3/templates/:template_id\r\n\t\r\nThis operation now retrieves the information of interest needed to transfer the templates intact to the receiving account:\r\n\r\n\t{\r\n  \t  \"templates\": [\r\n        {\r\n          \"id\": \"e8ac01d5-a07a-4a71-b14c-4721136fe6aa\",\r\n      \t  \"name\": \"example template name\",\r\n      \t  \"versions\": [\r\n            {\r\n          \t  \"id\": \"de37d11b-082a-42c0-9884-c0c143015a47\",\r\n              \"user_id\": 1234,\r\n              \"template_id\": \"d51480ba-ca3f-465c-bc3e-ceb71d73c38d\",\r\n              \"active\": 1,\r\n              \"name\": \"example version\",\r\n              \"html_content\": \"<%body%><strong>Click to Reset</strong>\",\r\n              \"plain_content\": \"Click to Reset<%body%>\",\r\n              \"subject\": \"<%subject%>\",\r\n              \"updated_at\": \"2014-05-22 20:05:21\"\r\n        \t}]\r\n    \t  }]\r\n\t}\r\n\t\r\nOf interest are the following key pairs for transferring templates intact; :name, :subject, :html_content, :plain_content, and :active. Refer to [Template Versions](https://sendgrid.com/docs/API_Reference/Web_API_v3/Template_Engine/versions.html) POST action for more information.\r\n\r\n### Step 3. Backup templates to an external file\r\nThe templates (and their versions) will be stored in a JSON file, with the named format as:\r\n\r\n\t':template_id'.json\r\n\t\r\nThis is an additional step meant to safeguard against a complete loss of templates should something happen after transferring templates, e.g., deleting the first account.\r\n\r\n\r\n### Step 4. Create an empty template in Account2\r\nBefore any templates can be copied to the second account (*transfer to* account), a new template needs to be created. A name is required to create the new template; the :name key pair saved in Step #1 is used in this step. A prepend string can be configured to distinguish the new template from any existing templates in the second account:\r\n\r\n\tcurl -H \"Content-Type: application/json\" -X POST -d {\"name\":\"Prepend_text\"+\"template_name\"} https://username:password@api.sendgrid.com/v3/templates/\r\n\r\n**Notes:**  \r\n1. Newly created template will have a different :id than that of the existing template.  \r\n2. If the template already exists, template creation will fail, and a 400 response is returned. **There is currently no check to skip already created templates, and it is unknown how the process will fail as this scenario has not been tested yet**.  \r\n3. Version names **must be unique** accross templates within an account.\r\n\r\n### Step 5. Populate template\r\nTransfer the template content to the newly created template, using the [Template Versions API](https://sendgrid.com/docs/API_Reference/Web_API_v3/Template_Engine/versions.html).\r\n\r\n\tcurl -H \"Content-Type: application/json\" -X POST -d @template_content.json https://username:password@api.sendgrid.com/v3/templates/:template_id/versions\r\n\r\nThe versions of each template is pushed, one at a time, to the new template, using the required key pairs described in Step #2. As a safeguard, all other information is stripped from the version before pushing changes, i.e., information such as :user_id and :updated_at, as these are regenerated on transfer.\r\n\r\n\r\n### Step 6. Wash, Rinse, Repeat\r\nRepeat Steps #2 - #5 for every template in the array retrieved in Step #1. At the end, you should have all templates transferred from your first account to the second!","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}