{"name":"Sendgrid Template Transfer","tagline":"Ruby script to transfer Sendgrid templates from one account to another, using the Sendgrid Template API.","body":"# TemplateTransfer::Script\r\n\r\n## Scope\r\n\r\nThe purpose of this script is tranfer Sendgrid templates and their versions from one account to another.\r\n\r\nCurrently, Sendgrid does not the option for automatic bulk tranfer of templates; to accomplish this task, templates have to be manually copied from one account, and saved to the other. This script automatates this task, using the available Sendgrid template API (https://sendgrid.com/docs/API_Reference/Web_API_v3/Template_Engine/templates.html).\r\n\r\n## Setup\r\n\r\nIt is recommended to configre an RVM gemset:\r\n\r\n    $> echo 'ruby-2.1.2' > .ruby-version\r\n    $> echo 'template_tranfer' > .ruby-gemset\r\n\r\nNote: The `$>` is meant to signify the terminal prompt, and is not part of the command; do not include this prompt in your command line!\r\n\r\nInstall bundled gems:\r\n\r\n    $> bundle install\r\n\r\nNote: This script is bundled as a gem; there are no other dependencies except the ones bundled with this gem (available via http://rubygems.com).\r\n\r\n## Configuration\r\n\r\nThis project expects a local config/config.yml to specify the following:\r\n\r\n1. **sendgrid:** Sendgrid credentials for accounts to transfer templates *from* and *to*, in that order.\r\n2. **prepend_name:** String text to prepend to the beginning of each template name, to help distiguish tranffered templates.\r\n3. **endpoint:** URI endpoint for the Sendgrid template API operations.\r\n\r\nAn example file has been supplied and the primary file is ignored by version control:\r\n\r\n    $> cp config/config.yml.example config/config.yml\r\n\r\n## Usage\r\n\r\nThe script can be run directly from the *bin/* directory; first, make the script launcher executable, if it isn't already:\r\n\r\n    $> chmod +x bin/template_transfer\r\n\r\nThen execute the script:\r\n\r\n    $> bin/template_transfer\r\n\r\nYou can also time the script operation to determine how long the transfer takes:\r\n\r\n    $> time bin/template_transfer\r\n\r\n\r\n## TemplateTransfer::Script Flow\r\n\r\nThis script was born out of the lack of resources to transfer templates between accounts, using the supplied Sendgrid Template API (https://sendgrid.com/docs/API_Reference/Web_API_v3/Template_Engine/templates.html). Below is an outline of the process I used to accomplish the task. Most of this was trial and error, and I want to save others the pain of this process.\r\n\r\nNote that this solution was coded in Ruby 2.1.2; to code in another language, just use this flow and code against appropriate analogs. I may code this solution in Python as well, if there is demand.\r\n\r\n**Important Caveat:** This script **does not** selectively copy templates, nor is there the ability to select the templates that you want tranffered. This script will copy **ALL** templates from the first account!\r\n\r\n### Tranfer Steps\r\n1. Copy all templates from Account1 (account you want to copy templates from):\r\n    + This operation does not copy the template contents, though identifying metadata for templates and underlying versions (id, name, etc.) are returned.\r\n    + The :name and :id of each template is stored in an array in memory for use in the following steps.\r\n    + Curl Example: `curl -X GET https://username:password@api.sendgrid.com/v3/templates/`\r\n\r\n2. Retrieve each template, with given :id from step 1:\r\n    + This operation retrieve one template, but returns all relevant data for that template (:name, :id, :versions, :html_content, :plain_content, etc.)\r\n    + Returns the retrieved template.\r\n    + Cur Example: `curl -X GET https://username:password@api.sendgrid.com/v3/templates/:template_id`\r\n\r\n3. Backup template:\r\n    + This step stores this template in a JSON file in the templates/ directory\r\n    + Name format is ':template_id'.json\r\n\r\n4. Create an empty template in Account2 (receiving account):\r\n    + Before any template information can be tranffered, a new template needs to be created.\r\n    + A name is required to create the new template. The name of the original template, with a prepended string is used in the script.\r\n    + The newly created template will have a different :id than the original\r\n    + **Note:** If a template with the name that already exist is attempted, the creation will fail.\r\n    + Curl Example `curl -H \"Content-Type: application/json\" -X POST -d {\"name\":\"template_name\"} https://username:password@api.sendgrid.com/v3/templates/`\r\n\r\n5. Populate template:\r\n    + Tranfer the template information retrieved in step 2.\r\n    + Script pushes versions of current template, one at a time, if different versions exist.\r\n    + Relevant template version documentation can be found at https://sendgrid.com/docs/API_Reference/Web_API_v3/Template_Engine/versions.html\r\n    + Curl Example `curl -H \"Content-Type: application/json\" -X POST -d @template_content.json https://username:password@api.sendgrid.com/v3/templates/:template_id/versions`\r\n\r\n6. Repeat steps #2-#5 until the end of the array returned in step #1\r\n    + Perform Steps #2 thru #5 for all templates in the array.\r\n\r\n---\r\n\r\n# Notes\r\n### May 18, 2015\r\n----------------\r\n\r\n1. Retrieving all templates from a given account DOES NOT return template content. As such, the following approach will be taken:\r\n    - Retrieve all template information, and build an array of main template ids.\r\n    - Iterate through array to retrieve/store content for each template (including versions).\r\n\r\n### May 19, 2015\r\n----------------\r\n\r\n1. Based on experience from last coding session, script now follows these steps:\r\n    - Retrieves all templates from account, storing :id and :name in an template array of hashes.\r\n    - Iterates over template array, retrieving by template id, then storing each retrieved template in an external file (template_id.json), including metadata (versions, html_content, plain_content, for example).\r\n\r\n### May 20, 2015\r\n----------------\r\n\r\n1. Changed #save_template to #backup_template. Since the downloaded template will already be in memory, it makes more sense to backup the template for prosperity's sake, then create and populate a new template with the current template in memory. No need to read a file for this operation!\r\n2. Include the 2nd account (secondary_account?) to config.yml file. This will be needed for creating and populating the new templates.\r\n\r\n### May 21, 2015\r\n----------------\r\n\r\n1. Script now creates a new template for every imported template.\r\n2. Currently attempting to populate new templates with versions from the imported template.\r\n\r\n#### Observations:\r\n- Version names must be unique accross accounts\r\n- If template already exists, 400 response is returned\r\n    + I'm going to assume that all templates will be unique on the CHC site\r\n- Current attempts at populating the newly created template results in a 400 error from Sendgrid:\r\n    + Net::HTTPBadRequest 400 BAD REQUEST readbody=true\r\n    + {\"error\"=>\"JSON is malformed\"}\r\n\r\n### May 22, 2015\r\n----------------\r\n\r\n1. Working proptotype script!\r\n2. Template are now being tranffered, including versions.\r\n3. The previous error was due to trying to process a versions array. The solution was to process each item in the array seperately.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}